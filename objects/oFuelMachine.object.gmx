<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sFuelMachine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>150</depth>
  <persistent>0</persistent>
  <parentName>oSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hsp = 0;
//vsp = 0;

ScDepth()
image_speed = 0
Angle = image_angle
Health = 30

if random(5) &lt; 1 { HasOre = false } else { HasOre = false }

image_index = floor(random(image_number))
Rotation = ceil(random(4))
//if Rotation = 2 { image_angle = Angle + 90 }
//if Rotation = 3 { image_angle = Angle + 180 }
//if Rotation = 4 { image_angle = Angle + 270 }


Health = 30

//ScInitColor2()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if distance_to_object(oPlayer) &lt; 100 { 

DrawText = true

if keyboard_check_pressed(ord("E")){ room_goto(FuelStore) }
 
  
   
} else { DrawText = false }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
//Draw overheat bar

X1 = x + 20 
Y1 = y + 40
X2 = x - 20
Y2 = y + 45
OverheatPercent = (HeatSec / OverheatTemp) * 100
OverHeatVisual = (HeatSec / OverheatTemp) * 255

Shake = random_range(-2, 2)

if OverHeating = true {
Y1 = Y1 + Shake
Y2 = Y2 + Shake
X1 = X1 + Shake
X2 = X2 + Shake
}


//draw_text(x, y, "Heat: "+string(OverheatPercent))
//draw_healthbar(X1, Y1, X2, Y2, OverheatPercent, c_black, c_yellow, c_red, 0, false, false);
*/

draw_self()




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
