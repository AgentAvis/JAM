<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite64</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = .45
image_speed = .20
//ScInitColor()
Health = 3

Called = true

thrown = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ScDepth2()

if thrown = true {
    //airborne stuff
    
    Called = false
    if speed &gt; 1.25 { speed -= .1 } else { thrown = false }
    
    //speed = 7.5 
    //(.1 * room_speed) = 6
    
    
    
    
    
     //collision
    
    if distance_to_object(instance_nearest(x,y,oSolid)) &lt; 10 {
        if place_meeting(x + hspeed,y,oSolid) { x -=hspeed; hspeed = 0 }
        if place_meeting(x - hspeed,y,oSolid) { x +=hspeed; hspeed = 0 }
        if place_meeting(x ,y + vspeed,oSolid) { y -=vspeed; vspeed = 0 }
        if place_meeting(x ,y - vspeed,oSolid) { y +=vspeed; vspeed = 0}
    } 
  
} else {
    //ground stuff
    
    if Called = true {
    image_speed = .20
        if instance_exists(oPlayer) {
        
            if ScCanSee(oPlayer) {
                direction = point_direction(x,y,oPlayer.x,oPlayer.y) 
                Wander =  false
                if speed &lt; 1.25 { speed += .05 } else { speed -= .05 }
            } else { 
                Wander = true
            }
            
        }
    } else { Wander = false;  }
    
    if Wander = true { direction += random_range(-20,20) if speed &lt; .75 { speed += .05 } else { speed -= .05 } } else {  }
    
    if Called = false { speed = 0 image_speed = 0}
    
     //collision
    
    if distance_to_object(instance_nearest(x,y,oSolid)) &lt; 10 {
        if place_meeting(x + 8,y,oSolid) { x -=4 }
        if place_meeting(x - 8,y,oSolid) { x +=4 }
        if place_meeting(x ,y + 8,oSolid) { y -=4 }
        if place_meeting(x ,y - 8,oSolid) { y +=4 }
    }    

}



//if instance_exists(oWallMaker) {speed = 0}

if Health &lt; 1 {

  instance_destroy()

}

if place_meeting(x,y,oCall) and ScCanSee(oPlayer) { Called = true }

if keyboard_check(ord('R')) { Called = false }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()

// in collision event with whatever object...
//var_dir = point_direction(x,y,other.x,other.y)
//x = x+lengthdir_x(-1,var_dir)
//y = y+lengthdir_y(-1,var_dir)

//direction = point_direction(other.x,other.y,x,y)
//motion_add( point_direction(x,y,other.x,other.y),.1)



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWorker">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
// in collision event with whatever object...
var_dir = point_direction(x,y,other.x,other.y)
x = x+lengthdir_x(-1,var_dir)
y = y+lengthdir_y(-1,var_dir)
}
















</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if global.debug = true { draw_text(x,y,string( distance_to_object(oPlayer) )) }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
